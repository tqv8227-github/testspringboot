plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'   // need this to scan and 
	id 'java'   // need this plugin to build jar file
	// id 'war'    // need this plugin to build war file
}



group = 'com.example'
//version = '0.0.1-SNAPSHOT'
version = '1.0'
sourceCompatibility = '14'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	testImplementation('org.springframework.boot:spring-boot-starter-test') {
//		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//	}
//}
dependencies {
	// Spring Boot's JPA support
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')    // use Spring Data (Hibernate)
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'    // use JdbcTemplate
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// PostgresSQL-specific connector for JPA
	//implementation('org.postgresql:postgresql:9.4-1206-jdbc42')
	implementation('org.postgresql:postgresql:42.2.14')
	
	// Lombok autogenerates things like getters and setters
	compileOnly('org.projectlombok:lombok')
	
	//compileOnly 'org.projectlombok:lombok'
	annotationProcessor ('org.projectlombok:lombok')
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
test {
	useJUnitPlatform()
}
